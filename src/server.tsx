import "./server-register-import-hook";

import path from "node:path";
import url from "node:url";
import Express, { static as expressStatic } from "express";
import { renderToPipeableStream } from "react-dom/server";
import { renderToPipeableStream as renderToFlightPipeableStream } from "react-server-dom-webpack/server.node";

import ServerRoot from "./app/server-root";
import { ROOT_DOM_NODE_ID, FLIGHT_REQUEST_HEADER } from "./shared";

const app = Express();

const componentIdServer = (file: string, componentName: string) =>
  url.pathToFileURL(path.resolve(__dirname, file)) + "#" + componentName;

const throwOnMissingProperty = <TObj extends Record<string, any>>(
  obj: TObj
): TObj => {
  return new Proxy(obj, {
    get(target, name) {
      if (!(name in target)) {
        throw new Error(`Missing property ${String(name)}`);
      }
      return target[name as any];
    },
  });
};

app.get("/", (req, res) => {
  const elem = <ServerRoot />;

  if (req.header(FLIGHT_REQUEST_HEADER)) {
    const stream = renderToFlightPipeableStream(
      elem,
      // catch id errors early
      throwOnMissingProperty({
        // the id generated by the `react-server-dom-webpack/node-register` is something like this:
        // "file://ABSOLUTE_PATH/dist/server/app/client-child.js#ClientChild"
        [componentIdServer("./app/client-child.js", "ClientChild")]: {
          id: "./src/app/client-child.tsx", // webpack module id, passed to __webpack_require__. just the path in `mode: development`
          name: "ClientChild",
          async: false,
          chunks: [],
        },
      })
      // new Proxy(
      //   {},
      //   {
      //     get(_, name) {
      //       console.log(`getting ${String(name)} from bundlerConfig`);
      //       return undefined;
      //     },
      //   }
      // )
    );
    stream.pipe(res);
  } else {
    const stream = renderToPipeableStream(
      <html>
        <head></head>
        <body>
          <div id={ROOT_DOM_NODE_ID}></div>
        </body>
      </html>,
      {
        bootstrapScripts: [`${ASSETS_ROUTE}/main.js`],
      }
    );
    stream.pipe(res);
  }
});

const ASSETS_ROUTE = "/_assets";

const CLIENT_ASSETS_DIR = path.resolve(__dirname, "../client");

app.use(ASSETS_ROUTE, expressStatic(CLIENT_ASSETS_DIR));

app.listen(8080);
